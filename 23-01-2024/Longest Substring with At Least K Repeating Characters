class Solution {
    public int longestSubstring(String s, int k) 
    {
        return helper(s,0,s.length()-1,k);
    }

    public static int helper(String s,int start,int end,int k)
    {
        if(end+1<k)
        {
            return 0;
        }
        int[] freq = new int[26];

        for(int i=start;i<=end;i++)
        {
            freq[s.charAt(i)-'a']++;
        }

        for(int i=start;i<=end;i++)
        {
            if(freq[s.charAt(i)-'a']>=k)
            {
                continue;
            }

            int midNext = i+1;

            while(midNext<=end && freq[s.charAt(midNext)-'a']<k)
            {
                midNext++;
            }
            
            return Math.max(helper(s,start,i-1,k),helper(s,midNext,end,k));
        }

        return end-start+1;
    }
}
